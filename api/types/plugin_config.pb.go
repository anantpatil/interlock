// Code generated by protoc-gen-go.
// source: github.com/ehazlett/interlock/api/types/plugin_config.proto
// DO NOT EDIT!

/*
Package types is a generated protocol buffer package.

It is generated from these files:
	github.com/ehazlett/interlock/api/types/plugin_config.proto

It has these top-level messages:
	PluginConfig
*/
package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// PluginConfig has all options for all load balancer plugins
// the plugin itself will use whichever options needed
type PluginConfig struct {
	Version                string `protobuf:"bytes,1,opt,name=version" json:"version,omitempty"`
	User                   string `protobuf:"bytes,2,opt,name=user" json:"user,omitempty"`
	ConfigPath             string `protobuf:"bytes,3,opt,name=config_path,json=configPath" json:"config_path,omitempty"`
	PidPath                string `protobuf:"bytes,4,opt,name=pid_path,json=pidPath" json:"pid_path,omitempty"`
	TemplatePath           string `protobuf:"bytes,5,opt,name=template_path,json=templatePath" json:"template_path,omitempty"`
	BackendOverrideAddress string `protobuf:"bytes,6,opt,name=backend_override_address,json=backendOverrideAddress" json:"backend_override_address,omitempty"`
	ConnectTimeout         int64  `protobuf:"varint,7,opt,name=connect_timeout,json=connectTimeout" json:"connect_timeout,omitempty"`
	SendTimeout            int64  `protobuf:"varint,8,opt,name=send_timeout,json=sendTimeout" json:"send_timeout,omitempty"`
	ServerTimeout          int64  `protobuf:"varint,9,opt,name=server_timeout,json=serverTimeout" json:"server_timeout,omitempty"`
	ClientTimeout          int64  `protobuf:"varint,10,opt,name=client_timeout,json=clientTimeout" json:"client_timeout,omitempty"`
	ReadTimeout            int64  `protobuf:"varint,11,opt,name=read_timeout,json=readTimeout" json:"read_timeout,omitempty"`
	Port                   uint64 `protobuf:"varint,12,opt,name=port" json:"port,omitempty"`
	AdminUser              string `protobuf:"bytes,13,opt,name=admin_user,json=adminUser" json:"admin_user,omitempty"`
	AdminPass              string `protobuf:"bytes,14,opt,name=admin_pass,json=adminPass" json:"admin_pass,omitempty"`
	SslCert                string `protobuf:"bytes,15,opt,name=ssl_cert,json=sslCert" json:"ssl_cert,omitempty"`
	SslPort                uint64 `protobuf:"varint,16,opt,name=ssl_port,json=sslPort" json:"ssl_port,omitempty"`
	SslOpts                string `protobuf:"bytes,17,opt,name=ssl_opts,json=sslOpts" json:"ssl_opts,omitempty"`
	SslDefaultDhParam      uint64 `protobuf:"varint,18,opt,name=ssl_default_dh_param,json=sslDefaultDhParam" json:"ssl_default_dh_param,omitempty"`
	SslVerify              string `protobuf:"bytes,19,opt,name=ssl_verify,json=sslVerify" json:"ssl_verify,omitempty"`
	WorkerProcesses        int64  `protobuf:"varint,20,opt,name=worker_processes,json=workerProcesses" json:"worker_processes,omitempty"`
	RlimitNoFile           int64  `protobuf:"varint,21,opt,name=rlimit_no_file,json=rlimitNoFile" json:"rlimit_no_file,omitempty"`
	SslCiphers             string `protobuf:"bytes,22,opt,name=ssl_ciphers,json=sslCiphers" json:"ssl_ciphers,omitempty"`
	SslProtocols           string `protobuf:"bytes,23,opt,name=ssl_protocols,json=sslProtocols" json:"ssl_protocols,omitempty"`
	MaxConnections         int64  `protobuf:"varint,24,opt,name=max_connections,json=maxConnections" json:"max_connections,omitempty"`
}

func (m *PluginConfig) Reset()                    { *m = PluginConfig{} }
func (m *PluginConfig) String() string            { return proto.CompactTextString(m) }
func (*PluginConfig) ProtoMessage()               {}
func (*PluginConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PluginConfig) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *PluginConfig) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *PluginConfig) GetConfigPath() string {
	if m != nil {
		return m.ConfigPath
	}
	return ""
}

func (m *PluginConfig) GetPidPath() string {
	if m != nil {
		return m.PidPath
	}
	return ""
}

func (m *PluginConfig) GetTemplatePath() string {
	if m != nil {
		return m.TemplatePath
	}
	return ""
}

func (m *PluginConfig) GetBackendOverrideAddress() string {
	if m != nil {
		return m.BackendOverrideAddress
	}
	return ""
}

func (m *PluginConfig) GetConnectTimeout() int64 {
	if m != nil {
		return m.ConnectTimeout
	}
	return 0
}

func (m *PluginConfig) GetSendTimeout() int64 {
	if m != nil {
		return m.SendTimeout
	}
	return 0
}

func (m *PluginConfig) GetServerTimeout() int64 {
	if m != nil {
		return m.ServerTimeout
	}
	return 0
}

func (m *PluginConfig) GetClientTimeout() int64 {
	if m != nil {
		return m.ClientTimeout
	}
	return 0
}

func (m *PluginConfig) GetReadTimeout() int64 {
	if m != nil {
		return m.ReadTimeout
	}
	return 0
}

func (m *PluginConfig) GetPort() uint64 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *PluginConfig) GetAdminUser() string {
	if m != nil {
		return m.AdminUser
	}
	return ""
}

func (m *PluginConfig) GetAdminPass() string {
	if m != nil {
		return m.AdminPass
	}
	return ""
}

func (m *PluginConfig) GetSslCert() string {
	if m != nil {
		return m.SslCert
	}
	return ""
}

func (m *PluginConfig) GetSslPort() uint64 {
	if m != nil {
		return m.SslPort
	}
	return 0
}

func (m *PluginConfig) GetSslOpts() string {
	if m != nil {
		return m.SslOpts
	}
	return ""
}

func (m *PluginConfig) GetSslDefaultDhParam() uint64 {
	if m != nil {
		return m.SslDefaultDhParam
	}
	return 0
}

func (m *PluginConfig) GetSslVerify() string {
	if m != nil {
		return m.SslVerify
	}
	return ""
}

func (m *PluginConfig) GetWorkerProcesses() int64 {
	if m != nil {
		return m.WorkerProcesses
	}
	return 0
}

func (m *PluginConfig) GetRlimitNoFile() int64 {
	if m != nil {
		return m.RlimitNoFile
	}
	return 0
}

func (m *PluginConfig) GetSslCiphers() string {
	if m != nil {
		return m.SslCiphers
	}
	return ""
}

func (m *PluginConfig) GetSslProtocols() string {
	if m != nil {
		return m.SslProtocols
	}
	return ""
}

func (m *PluginConfig) GetMaxConnections() int64 {
	if m != nil {
		return m.MaxConnections
	}
	return 0
}

func init() {
	proto.RegisterType((*PluginConfig)(nil), "interlock.v1.types.PluginConfig")
}

func init() {
	proto.RegisterFile("github.com/ehazlett/interlock/api/types/plugin_config.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 615 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x54, 0x93, 0xcf, 0x6e, 0x13, 0x31,
	0x10, 0x87, 0x15, 0x1a, 0x9a, 0xc6, 0xf9, 0xd3, 0xd6, 0xb4, 0xc5, 0x20, 0xa1, 0x14, 0x10, 0x50,
	0x24, 0x94, 0x08, 0x21, 0x10, 0x12, 0x27, 0xda, 0xaa, 0xe2, 0x10, 0xd1, 0x68, 0x03, 0x5c, 0x57,
	0xee, 0xee, 0x24, 0xb1, 0xea, 0x5d, 0x5b, 0x1e, 0x27, 0xb4, 0x3c, 0x21, 0x4f, 0x91, 0x43, 0x9e,
	0x04, 0x79, 0x9c, 0x4d, 0xcb, 0x6d, 0xfc, 0xfd, 0xbe, 0xcc, 0x6c, 0x66, 0xbd, 0xec, 0xcb, 0x54,
	0xf9, 0xd9, 0xfc, 0xaa, 0x9f, 0x99, 0x62, 0x00, 0x33, 0xf9, 0x47, 0x83, 0xf7, 0x03, 0x55, 0x7a,
	0x70, 0xda, 0x64, 0xd7, 0x03, 0x69, 0xd5, 0xc0, 0xdf, 0x5a, 0xc0, 0x81, 0xd5, 0xf3, 0xa9, 0x2a,
	0xd3, 0xcc, 0x94, 0x13, 0x35, 0xed, 0x5b, 0x67, 0xbc, 0xe1, 0x7c, 0x23, 0xf6, 0x17, 0xef, 0xfb,
	0xe4, 0x3d, 0x3d, 0x98, 0x9a, 0xa9, 0xa1, 0x78, 0x10, 0xaa, 0x68, 0xbe, 0xf8, 0xdb, 0x60, 0xed,
	0x11, 0x75, 0x38, 0xa3, 0x06, 0x5c, 0xb0, 0xc6, 0x02, 0x1c, 0x2a, 0x53, 0x8a, 0xda, 0x71, 0xed,
	0xa4, 0x99, 0x54, 0x47, 0xce, 0x59, 0x7d, 0x8e, 0xe0, 0xc4, 0x03, 0xc2, 0x54, 0xf3, 0x1e, 0x6b,
	0xc5, 0xc1, 0xa9, 0x95, 0x7e, 0x26, 0xb6, 0x28, 0x62, 0x11, 0x8d, 0xa4, 0x9f, 0xf1, 0x27, 0x6c,
	0xc7, 0xaa, 0x3c, 0xa6, 0xf5, 0xd8, 0xcf, 0xaa, 0x9c, 0xa2, 0x97, 0xac, 0xe3, 0xa1, 0xb0, 0x5a,
	0x7a, 0x88, 0xf9, 0x43, 0xca, 0xdb, 0x15, 0x24, 0xe9, 0x33, 0x13, 0x57, 0x32, 0xbb, 0x86, 0x32,
	0x4f, 0xcd, 0x02, 0x9c, 0x53, 0x39, 0xa4, 0x32, 0xcf, 0x1d, 0x20, 0x8a, 0x6d, 0xf2, 0x8f, 0xd6,
	0xf9, 0xe5, 0x3a, 0xfe, 0x1a, 0x53, 0xfe, 0x86, 0xed, 0x66, 0xa6, 0x2c, 0x21, 0xf3, 0xa9, 0x57,
	0x05, 0x98, 0xb9, 0x17, 0x8d, 0xe3, 0xda, 0xc9, 0x56, 0xd2, 0x5d, 0xe3, 0x1f, 0x91, 0xf2, 0xe7,
	0xac, 0x8d, 0xa1, 0x7f, 0x65, 0xed, 0x90, 0xd5, 0x0a, 0xac, 0x52, 0x5e, 0xb1, 0x2e, 0x82, 0x5b,
	0x80, 0xdb, 0x48, 0x4d, 0x92, 0x3a, 0x91, 0xde, 0xd3, 0x32, 0xad, 0xa0, 0xbc, 0x9b, 0xc8, 0xa2,
	0x16, 0xe9, 0xbd, 0x81, 0x0e, 0xe4, 0xdd, 0xc0, 0x56, 0x1c, 0x18, 0x58, 0xa5, 0x70, 0x56, 0xb7,
	0xc6, 0x79, 0xd1, 0x3e, 0xae, 0x9d, 0xd4, 0x13, 0xaa, 0xf9, 0x33, 0xc6, 0x64, 0x5e, 0xa8, 0x32,
	0xa5, 0xb7, 0xd0, 0xa1, 0x3f, 0xdf, 0x24, 0xf2, 0x33, 0xbc, 0x8a, 0x4d, 0x6c, 0x25, 0xa2, 0xe8,
	0xde, 0x8b, 0x47, 0x12, 0x91, 0xbf, 0x66, 0x3b, 0x88, 0x3a, 0xcd, 0xc0, 0x79, 0xb1, 0x1b, 0xc2,
	0xd3, 0xd6, 0x6a, 0xd9, 0x6b, 0x8c, 0xc7, 0xc3, 0x33, 0x70, 0x3e, 0x69, 0x20, 0xea, 0x50, 0x54,
	0x1e, 0x4d, 0xdf, 0x0b, 0xd3, 0x37, 0xde, 0xc8, 0xac, 0xbd, 0x50, 0x54, 0x9e, 0xb1, 0x1e, 0xc5,
	0xfe, 0x7f, 0xfd, 0x2e, 0xad, 0x47, 0xf2, 0x42, 0xc1, 0x2f, 0xd8, 0x41, 0xf0, 0x72, 0x98, 0xc8,
	0xb9, 0xf6, 0x69, 0x3e, 0x4b, 0xad, 0x74, 0xb2, 0x10, 0x9c, 0x7a, 0x1f, 0xae, 0x96, 0xbd, 0xfd,
	0xf1, 0x78, 0x78, 0x1e, 0xe3, 0xf3, 0x6f, 0xa3, 0x10, 0x26, 0xfb, 0x88, 0xba, 0x42, 0x33, 0x42,
	0xfc, 0x1d, 0x63, 0xa1, 0xcf, 0x02, 0x9c, 0x9a, 0xdc, 0x8a, 0x47, 0x34, 0xb1, 0xb3, 0x5a, 0xf6,
	0x9a, 0xe3, 0xf1, 0xf0, 0x17, 0xc1, 0xa4, 0x89, 0xa8, 0x63, 0xc9, 0xdf, 0xb2, 0xbd, 0xdf, 0xc6,
	0x5d, 0x83, 0x4b, 0xad, 0x33, 0x19, 0x20, 0x02, 0x8a, 0x03, 0x5a, 0xf3, 0x6e, 0xe4, 0xa3, 0x0a,
	0xf3, 0x4f, 0xac, 0xeb, 0xb4, 0x2a, 0x94, 0x4f, 0x4b, 0x93, 0x4e, 0x94, 0x06, 0x71, 0x18, 0xc4,
	0xd3, 0xbd, 0xd5, 0xb2, 0xd7, 0x4e, 0x86, 0x21, 0xf9, 0x6e, 0x2e, 0x94, 0x86, 0xa4, 0x1d, 0xbd,
	0x78, 0xe2, 0x03, 0xd6, 0xa2, 0x85, 0x2a, 0x3b, 0x03, 0x87, 0xe2, 0x88, 0x9e, 0xa8, 0xbb, 0x5a,
	0xf6, 0x58, 0xd8, 0x69, 0xa4, 0x49, 0x78, 0xe6, 0x75, 0xcd, 0x3f, 0xb2, 0x0e, 0x6d, 0x36, 0x7c,
	0x77, 0x99, 0xd1, 0x28, 0x1e, 0xd3, 0x4f, 0x68, 0x4e, 0x58, 0x6f, 0xc5, 0x93, 0x76, 0xd8, 0x71,
	0x75, 0x0a, 0xf7, 0xb8, 0x90, 0x37, 0xe9, 0xfa, 0xd2, 0x2a, 0x53, 0xa2, 0x10, 0xf1, 0x1e, 0x17,
	0xf2, 0xe6, 0xec, 0x8e, 0x5e, 0x6d, 0x53, 0xe7, 0x0f, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0xde,
	0x30, 0x3e, 0x1a, 0x3a, 0x04, 0x00, 0x00,
}
